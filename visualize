Imports System.ComponentModel
Imports System.IO
Imports System.Text
Imports System.Windows.Input
Imports System.Xml.Linq

Public Class MyViewModel
    Implements INotifyPropertyChanged

    ' Propriétés pour les champs à inclure dans le XML
    Private _champ1 As String = "Valeur par défaut"
    Private _champ2 As String = "Valeur par défaut"
    Private _champ3 As String = "Valeur par défaut"
    Private _indCourriel As String = "Non"
    Private _indLangue As String = "Français"

    ' Propriétés pour les champs
    Public Property Champ1 As String
        Get
            Return _champ1
        End Get
        Set(value As String)
            _champ1 = value
            OnPropertyChanged("Champ1")
        End Set
    End Property

    Public Property Champ2 As String
        Get
            Return _champ2
        End Get
        Set(value As String)
            _champ2 = value
            OnPropertyChanged("Champ2")
        End Set
    End Property

    Public Property Champ3 As String
        Get
            Return _champ3
        End Get
        Set(value As String)
            _champ3 = value
            OnPropertyChanged("Champ3")
        End Set
    End Property

    Public Property IndCourriel As String
        Get
            Return _indCourriel
        End Get
        Set(value As String)
            _indCourriel = value
            OnPropertyChanged("IndCourriel")
        End Set
    End Property

    Public Property IndLangue As String
        Get
            Return _indLangue
        End Get
        Set(value As String)
            _indLangue = value
            OnPropertyChanged("IndLangue")
        End Set
    End Property

    ' Commande pour télécharger le fichier XML
    Public Property TelechargerXmlCommand As ICommand

    ' Constructeur
    Public Sub New()
        ' Initialisation de la commande
        TelechargerXmlCommand = New RelayCommand(AddressOf TelechargerXml)
    End Sub

    ' Méthode pour générer et enregistrer le fichier XML
    Private Sub TelechargerXml(obj As Object)
        Try
            ' Création de l'objet XML
            Dim xmlDoc As New XDocument(
                New XElement("Communication",
                    New XElement("Champ1", Champ1),
                    New XElement("Champ2", Champ2),
                    New XElement("Champ3", Champ3),
                    New XElement("IndicateurCourriel", IndCourriel),
                    New XElement("IndicateurLangue", IndLangue)
                )
            )

            ' Définir le chemin du fichier (ex: Bureau)
            Dim cheminFichier As String = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.Desktop), "Communication.xml")

            ' Sauvegarde du fichier XML
            xmlDoc.Save(cheminFichier)

            ' Affichage de confirmation
            Console.WriteLine("✅ Fichier XML enregistré avec succès : " & cheminFichier)

        Catch ex As Exception
            Console.WriteLine("❌ Erreur lors de la génération du XML : " & ex.Message)
        End Try
    End Sub

    ' Méthode pour notifier les mises à jour des propriétés
    Public Event PropertyChanged As PropertyChangedEventHandler Implements INotifyPropertyChanged.PropertyChanged
    Protected Sub OnPropertyChanged(propertyName As String)
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub
End Class
