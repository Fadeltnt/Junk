<TextBox x:Name="TxtApercuXML"
         Height="200"
         Width="400"
         TextWrapping="Wrap"
         VerticalScrollBarVisibility="Auto"
         AcceptsReturn="True"
         IsReadOnly="True"/>
<Button Content="Générer Aperçu"
        Command="{Binding GenererApercuCommand}" />
<Button Content="Télécharger XML"
        Command="{Binding TelechargerXmlCommand}" 
        IsEnabled="{Binding PeutTelecharger}"/>

Imports System.Xml.Linq
Imports System.IO
Imports System.ComponentModel
Imports System.Windows.Input

Public Class MyViewModel
    Implements INotifyPropertyChanged

    Private _contenuXml As String
    Private _peutTelecharger As Boolean

    Public Event PropertyChanged As PropertyChangedEventHandler Implements INotifyPropertyChanged.PropertyChanged

    ' Propriété contenant l'aperçu du XML
    Public Property ContenuXml As String
        Get
            Return _contenuXml
        End Get
        Set(value As String)
            _contenuXml = value
            OnPropertyChanged("ContenuXml")
        End Set
    End Property

    ' Propriété permettant d'activer/désactiver le bouton de téléchargement
    Public Property PeutTelecharger As Boolean
        Get
            Return _peutTelecharger
        End Get
        Set(value As Boolean)
            _peutTelecharger = value
            OnPropertyChanged("PeutTelecharger")
        End Set
    End Property

    ' Commandes
    Public Property GenererApercuCommand As ICommand
    Public Property TelechargerXmlCommand As ICommand

    ' Constructeur
    Public Sub New()
        GenererApercuCommand = New RelayCommand(AddressOf GenererApercuXML)
        TelechargerXmlCommand = New RelayCommand(AddressOf TelechargerXML, Function() PeutTelecharger)
    End Sub

    ' Méthode pour générer l'aperçu XML
    Private Sub GenererApercuXML(obj As Object)
        ' Création d'un XML simple (à adapter avec tes données)
        Dim doc As XDocument = New XDocument(
            New XElement("Memo",
                New XElement("Champ1", "Valeur 1"),
                New XElement("Champ2", "Valeur 2"),
                New XElement("Champ3", "Valeur 3"),
                New XElement("Champ4", "Valeur 4")
            )
        )

        ' Convertir le XML en string formaté
        ContenuXml = doc.ToString()

        ' Activer le bouton de téléchargement
        PeutTelecharger = True
    End Sub

    ' Méthode pour télécharger le XML dans un fichier
    Private Sub TelechargerXML(obj As Object)
        Dim cheminFichier As String = "C:\Temp\memo.xml"
        File.WriteAllText(cheminFichier, ContenuXml)
        MessageBox.Show("Le fichier XML a été enregistré avec succès : " & cheminFichier)
    End Sub

    ' Notifier les changements de propriété
    Protected Sub OnPropertyChanged(propertyName As String)
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub
End Class
