Imports System.ComponentModel

Public Class MyViewModel
    Implements INotifyPropertyChanged

    Private _cheminFichier As String

    ' Propriété pour stocker le chemin du fichier Word
    Public Property CheminFichier As String
        Get
            Return _cheminFichier
        End Get
        Set(value As String)
            _cheminFichier = value
            OnPropertyChanged("CheminFichier")
            OnPropertyChanged("FichierCharge") ' Met à jour l'état du bouton
            SupprimerFichierCommand.RaiseCanExecuteChanged() ' Active/Désactive le bouton
        End Set
    End Property

    ' Propriété pour savoir si un fichier est chargé
    Public ReadOnly Property FichierCharge As Boolean
        Get
            Return Not String.IsNullOrEmpty(CheminFichier)
        End Get
    End Property

    ' Événement pour notifier le changement des propriétés
    Public Event PropertyChanged As PropertyChangedEventHandler Implements INotifyPropertyChanged.PropertyChanged

    Protected Sub OnPropertyChanged(propertyName As String)
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub
End Class


Public Property SupprimerFichierCommand As RelayCommand

Public Sub New()
    ' Initialisation de la commande avec les méthodes associées
    SupprimerFichierCommand = New RelayCommand(AddressOf SupprimerFichier, AddressOf PeutSupprimerFichier)
End Sub

' Méthode pour supprimer le fichier
Private Sub SupprimerFichier(parameter As Object)
    CheminFichier = String.Empty ' Réinitialiser le chemin du fichier
End Sub

' Condition pour activer le bouton de suppression
Private Function PeutSupprimerFichier(parameter As Object) As Boolean
    Return FichierCharge ' Le bouton est actif seulement si un fichier est présent

<Button Content="Supprimer le fichier"
        Command="{Binding SupprimerFichierCommand}"
        Margin="10"/>
End Function
