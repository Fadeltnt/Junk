' Méthode pour extraire les informations du fichier Word
Private Sub ExtraireCodesDepuisWord(obj As Object)
    _codesG4.Clear()
    _codeSujet = String.Empty

    Dim wordApp As New Application()
    Dim wordDoc As Document = Nothing

    Try
        ' Ouvre le fichier Word en lecture seule
        wordDoc = wordApp.Documents.Open(cheminFichier, ReadOnly:=True)

        ' Définir les regex pour le code sujet, les codes G4 et les numéros de variable
        Dim regexCodeSujet As New Regex("Code sujet\s*:\s*([A-Z0-9]+)", RegexOptions.IgnoreCase)
        Dim regexG4 As New Regex("\bG4[A-Z0-9]+\b", RegexOptions.IgnoreCase)
        Dim regexVariable As New Regex("C\d+-\d+-(\d+)", RegexOptions.IgnoreCase)

        ' Indicateur pour commencer la collecte après le Code Sujet
        Dim collecteActive As Boolean = False

        ' Parcourir tous les paragraphes
        For Each paragraphe As Paragraph In wordDoc.Paragraphs
            Dim texte As String = paragraphe.Range.Text.Trim()

            ' Recherche du code sujet (une seule fois)
            If Not collecteActive Then
                Dim matchSujet As Match = regexCodeSujet.Match(texte)
                If matchSujet.Success Then
                    _codeSujet = matchSujet.Groups(1).Value
                    collecteActive = True
                End If
            Else
                ' Recherche des codes G4
                Dim matchG4 As MatchCollection = regexG4.Matches(texte)
                For Each match As Match In matchG4
                    Dim codeG4 As String = match.Value
                    Dim numeroVariable As String = String.Empty

                    ' Recherche de la variable associée dans le même paragraphe
                    Dim matchVariable As Match = regexVariable.Match(texte)
                    If matchVariable.Success Then
                        numeroVariable = matchVariable.Groups(1).Value
                    End If

                    ' Ajoute le code G4 avec ou sans variable
                    If String.IsNullOrEmpty(numeroVariable) Then
                        _codesG4.Add(codeG4)
                    Else
                        _codesG4.Add($"{codeG4}|{numeroVariable}")
                    End If
                Next
            End If
        Next

        ' Notifie le changement pour la vue
        OnPropertyChanged("CodeSujet")
        OnPropertyChanged("CodesG4")

    Catch ex As Exception
        ApercuXml = "❌ Erreur lors de l'extraction : " & ex.Message
    Finally
        ' Fermer le document et quitter Word
        If wordDoc IsNot Nothing Then
            wordDoc.Close(False)
            wordDoc = Nothing
        End If
        wordApp.Quit()
        wordApp = Nothing
    End Try
End Sub







' Méthode pour générer le XML avec gestion des variables
Private Sub GenererApercuXml(obj As Object)
    Try
        ' Création de l'objet XML
        Dim xmlDoc As New XDocument(
            New XDeclaration("1.0", "utf-8", "yes"),
            New XElement("memo",
                New XElement("champ", Champ1),
                New XElement("communication",
                    New XElement("champ", Champ2)
                ),
                New XElement("IdRef", Champ3),
                New XElement("CodeSujet", CodeSujet),
                New XElement("paragraphes",
                    From code In _codesG4
                    Let parts = code.Split("|"c)
                    Let numero = parts(0)
                    Let variable = If(parts.Length > 1, parts(1), String.Empty)
                    Select New XElement("paragraphe",
                        New XElement("numero", numero),
                        If(Not String.IsNullOrEmpty(variable),
                            New XElement("Variables", New XElement("numero", variable)),
                            New XElement("Variables")
                        )
                    )
                ),
                New XElement("divers", "")
            )
        )

        ' Met à jour l'aperçu XML avec indentation
        Dim settings As New XmlWriterSettings() With {
            .Indent = True,
            .Encoding = New System.Text.UTF8Encoding(False)
        }
        Using sw As New StringWriter()
            Using xw As XmlWriter = XmlWriter.Create(sw, settings)
                xmlDoc.Save(xw)
            End Using
            ApercuXml = sw.ToString()
        End Using

        ' Réinitialisation des valeurs après la génération
        _codesG4.Clear()
        _codeSujet = String.Empty

    Catch ex As Exception
        ApercuXml = "❌ Erreur lors de la génération : " & ex.Message
    End Try
End Sub
